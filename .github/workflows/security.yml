name: Security Checks

on:
  schedule:
    # Executar diariamente √†s 02:00 UTC (03:00 Lisboa no inverno, 04:00 no ver√£o)
    - cron: '0 2 * * *'
  pull_request:
    branches: [main, master, develop]
  push:
    branches: [main, master, develop]
  workflow_dispatch: # Permitir execu√ß√£o manual

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          echo "üîç Executando auditoria de seguran√ßa..."
          npm audit --audit-level=moderate --json > npm-audit.json || true
          npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for high/critical vulnerabilities
        run: |
          echo "üö® Verificando vulnerabilidades cr√≠ticas..."
          HIGH_VULNS=$(npm audit --audit-level=high --json | jq '.metadata.vulnerabilities.high // 0')
          CRITICAL_VULNS=$(npm audit --audit-level=critical --json | jq '.metadata.vulnerabilities.critical // 0')
          
          echo "Vulnerabilidades High: $HIGH_VULNS"
          echo "Vulnerabilidades Critical: $CRITICAL_VULNS"
          
          if [ "$HIGH_VULNS" -gt 0 ] || [ "$CRITICAL_VULNS" -gt 0 ]; then
            echo "‚ùå Vulnerabilidades cr√≠ticas encontradas!"
            exit 1
          else
            echo "‚úÖ Nenhuma vulnerabilidade cr√≠tica encontrada"
          fi

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: npm-audit.json
        if: always()

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: security-and-quality

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [security-audit, secret-scan, codeql-analysis]
    if: always()
    
    steps:
      - name: Security Check Summary
        run: |
          echo "üõ°Ô∏è Resumo das Verifica√ß√µes de Seguran√ßa"
          echo "========================================"
          echo "Security Audit: ${{ needs.security-audit.result }}"
          echo "Secret Scan: ${{ needs.secret-scan.result }}"
          echo "CodeQL Analysis: ${{ needs.codeql-analysis.result }}"
          
          if [[ "${{ needs.security-audit.result }}" == "failure" ]] || 
             [[ "${{ needs.secret-scan.result }}" == "failure" ]] || 
             [[ "${{ needs.codeql-analysis.result }}" == "failure" ]]; then
            echo "‚ùå Algumas verifica√ß√µes de seguran√ßa falharam!"
            exit 1
          else
            echo "‚úÖ Todas as verifica√ß√µes de seguran√ßa passaram!"
          fi