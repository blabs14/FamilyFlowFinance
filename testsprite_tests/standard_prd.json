{
  "meta": {
    "project": "Family Flow Finance",
    "date": "2025-09-11",
    "prepared_by": "Software Development Manager"
  },
  "product_overview": "Family Flow Finance is a comprehensive and intuitive platform for family financial management, providing tools for budgeting, transactions, goal setting, and family member management to empower informed financial decisions and promote financial literacy.",
  "core_goals": [
    "Provide a complete, user-friendly platform for managing family finances",
    "Enable collaborative financial management among family members with role-based access control",
    "Support comprehensive financial tracking including accounts, transactions, budgets, and financial goals",
    "Deliver insightful reports and analytics to support informed financial decisions",
    "Ensure robust security and privacy compliance including multi-factor authentication and data encryption",
    "Support scalable architecture to handle significant user growth and concurrent usage",
    "Provide a modern, accessible UI/UX optimized for multiple devices including PWA support"
  ],
  "key_features": [
    "Full authentication system with email/password and OAuth providers (Google, Apple, Facebook)",
    "Family and member management with role-based permissions (owner, admin, member, viewer)",
    "Financial management with bank accounts, credit cards, transaction registration and categorization",
    "Monthly family budgets with spending alerts and projections",
    "Shared financial goals to foster collaborative saving and planning",
    "Data import/export capabilities (Excel/CSV), PDF report generation",
    "Modern responsive UI built with React, Tailwind CSS, and shadcn/ui including light/dark mode and accessibility compliance",
    "Security features like Row Level Security (RLS), input validation with Zod, and comprehensive auditing",
    "Payroll module for salary calculations, contract management, and tax compliance (future feature)"
  ],
  "user_flow_summary": [
    "User onboarding: registration, email verification, initial setup, and first transaction entry",
    "Daily usage: logging in, accessing dashboard, adding and categorizing transactions, checking budgets",
    "Family management: inviting members, accepting invitations, setting roles and permissions, managing approvals for large expenses",
    "Data import/export: uploading financial files and generating downloadable reports",
    "Viewing and interacting with analytics dashboards showing trends, budgets, and goals progress"
  ],
  "validation_criteria": [
    "Authentication processes must securely handle login, registration, OAuth, and multi-factor authentication",
    "Users can create and manage multiple bank accounts with validation on input",
    "Transactions imported must be automatically categorized with manual override available",
    "Budgets must provide real-time spending updates with alerts when thresholds are reached",
    "Family member invitations trigger email notifications and enforce role-based access control",
    "Reports and analytics load promptly, with anomalies highlighted automatically",
    "Payroll calculations reflect contract terms and update with fiscal changes",
    "All features comply with security policies including RLS and data encryption",
    "Application performs within target metrics for responsiveness and bundle size",
    "Test coverage thresholds met with automated unit, integration, and end-to-end tests"
  ],
  "code_summary": {
    "project_name": "Family Flow Finance",
    "description": "Sistema de gestão financeira familiar com funcionalidades de orçamentos, objetivos, transações e gestão de membros familiares",
    "tech_stacks": {
      "frontend": {
        "framework": "React 18.3.1",
        "build_tool": "Vite 7.1.4",
        "language": "TypeScript 5.5.3",
        "styling": "Tailwind CSS 3.4.11",
        "ui_components": "Radix UI + shadcn/ui",
        "routing": "React Router DOM 6.26.2",
        "state_management": "TanStack React Query 5.83.0",
        "forms": "React Hook Form 7.53.0",
        "validation": "Zod 3.25.76",
        "animations": "Framer Motion 12.23.11",
        "charts": "Recharts 2.12.7",
        "icons": "Lucide React 0.462.0",
        "themes": "next-themes 0.3.0",
        "notifications": "Sonner 1.5.0",
        "date_handling": "date-fns 3.6.0",
        "file_handling": "ExcelJS 4.4.0, jsPDF 3.0.1"
      },
      "backend": {
        "platform": "Supabase",
        "database": "PostgreSQL",
        "authentication": "Supabase Auth",
        "realtime": "Supabase Realtime",
        "storage": "Supabase Storage",
        "edge_functions": "Supabase Edge Functions",
        "client": "@supabase/supabase-js 2.52.1"
      },
      "testing": {
        "unit_testing": "Vitest 3.2.4",
        "component_testing": "React Testing Library 16.3.0",
        "e2e_testing": "Cypress 13.13.2, Playwright 1.54.2",
        "coverage": "@vitest/coverage-v8 3.2.4",
        "test_environment": "jsdom 26.1.0"
      },
      "development_tools": {
        "linting": "ESLint 9.9.0",
        "code_formatting": "Prettier (via ESLint)",
        "git_hooks": "Husky 9.1.7",
        "bundler_analysis": "vite-bundle-visualizer 1.2.1",
        "pwa": "vite-plugin-pwa 1.0.1",
        "internationalization": "i18next 25.3.6, react-i18next 15.6.1"
      }
    },
    "features": {
      "authentication": {
        "description": "Sistema completo de autenticação com Supabase Auth",
        "capabilities": [
          "Login/Registo com email/password",
          "OAuth (Google, Apple, Facebook)",
          "Recuperação de password",
          "Gestão de sessões",
          "Proteção de rotas"
        ]
      },
      "family_management": {
        "description": "Gestão de famílias e membros com sistema de roles",
        "capabilities": [
          "Criação e gestão de famílias",
          "Convites para membros",
          "Sistema de roles (owner, admin, member, viewer)",
          "Permissões granulares",
          "Gestão de configurações familiares"
        ]
      },
      "financial_management": {
        "description": "Gestão financeira completa para famílias",
        "capabilities": [
          "Gestão de contas bancárias e cartões",
          "Registo e categorização de transações",
          "Orçamentos mensais familiares",
          "Objetivos financeiros partilhados",
          "Dashboard com visão geral",
          "Relatórios e análises"
        ]
      },
      "data_import_export": {
        "description": "Importação e exportação de dados financeiros",
        "capabilities": [
          "Importação de ficheiros Excel/CSV",
          "Exportação para Excel",
          "Geração de relatórios PDF",
          "Mapeamento inteligente de dados"
        ]
      },
      "ui_ux": {
        "description": "Interface moderna e responsiva",
        "capabilities": [
          "Design system baseado em shadcn/ui",
          "Modo claro/escuro",
          "Navegação adaptativa (mobile/desktop)",
          "Componentes acessíveis (WCAG 2.1 AA)",
          "Animações suaves",
          "PWA com service worker"
        ]
      },
      "security": {
        "description": "Segurança robusta em todas as camadas",
        "capabilities": [
          "Row Level Security (RLS) no Supabase",
          "Validação de inputs com Zod",
          "Sanitização de dados",
          "Gestão segura de secrets",
          "Auditoria de operações",
          "Rate limiting"
        ]
      }
    },
    "architecture": {
      "pattern": "Component-based architecture with feature-driven organization",
      "structure": {
        "components": "Componentes reutilizáveis organizados por funcionalidade",
        "pages": "Páginas principais da aplicação",
        "hooks": "Custom hooks para lógica de estado",
        "services": "Serviços para comunicação com APIs",
        "contexts": "Contextos React para estado global",
        "validation": "Schemas Zod para validação",
        "types": "Definições TypeScript"
      },
      "database": {
        "type": "PostgreSQL via Supabase",
        "features": [
          "Row Level Security (RLS)",
          "Triggers para auditoria",
          "Funções RPC para operações complexas",
          "Políticas de segurança granulares"
        ]
      }
    },
    "development_setup": {
      "local_port": 8081,
      "dev_command": "npm run dev",
      "build_command": "npm run build",
      "test_commands": {
        "all": "npm test",
        "unit": "npm run test:unit",
        "integration": "npm run test:integration",
        "e2e": "npm run test:e2e",
        "coverage": "npm run test:coverage"
      }
    },
    "quality_assurance": {
      "test_coverage": "Cobertura de testes configurada com thresholds",
      "linting": "ESLint com regras TypeScript e React",
      "type_checking": "TypeScript strict mode",
      "security_audits": "npm audit integrado no CI/CD",
      "performance": "Bundle analysis e métricas de performance"
    },
    "deployment": {
      "frontend": "Vite build com suporte a PWA",
      "backend": "Supabase cloud platform",
      "ci_cd": "Scripts de validação e deployment automatizado",
      "environments": "Suporte a dev, test e prod"
    }
  }
}
