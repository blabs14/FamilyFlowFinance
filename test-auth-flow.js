// Teste simples para verificar o fluxo de autentica√ß√£o
// Execute com: node test-auth-flow.js

const puppeteer = require('puppeteer');

async function testAuthFlow() {
  console.log('üß™ Iniciando teste do fluxo de autentica√ß√£o...');
  
  const browser = await puppeteer.launch({ 
    headless: false, 
    defaultViewport: null,
    args: ['--start-maximized']
  });
  
  try {
    const page = await browser.newPage();
    
    // Interceptar logs do console
    page.on('console', msg => {
      if (msg.text().includes('üîê') || msg.text().includes('AuthContext')) {
        console.log('üì± Console:', msg.text());
      }
    });
    
    // Interceptar erros
    page.on('pageerror', error => {
      console.error('‚ùå Erro na p√°gina:', error.message);
    });
    
    console.log('1. Navegando para a aplica√ß√£o...');
    await page.goto('http://localhost:5173');
    await page.waitForTimeout(2000);
    
    console.log('2. Verificando redirecionamento para login...');
    const currentUrl = page.url();
    console.log('   URL atual:', currentUrl);
    
    if (currentUrl.includes('/login')) {
      console.log('‚úÖ Redirecionamento para login funcionou');
    } else {
      console.log('‚ö†Ô∏è  N√£o foi redirecionado para login');
    }
    
    console.log('3. Tentando aceder a rota protegida diretamente...');
    await page.goto('http://localhost:5173/app');
    await page.waitForTimeout(2000);
    
    const protectedUrl = page.url();
    console.log('   URL ap√≥s tentar aceder /app:', protectedUrl);
    
    if (protectedUrl.includes('/login')) {
      console.log('‚úÖ Prote√ß√£o de rotas funcionou - redirecionado para login');
    } else {
      console.log('‚ùå Prote√ß√£o de rotas falhou - n√£o foi redirecionado');
    }
    
    console.log('4. Verificando se o formul√°rio de login est√° presente...');
    const emailInput = await page.$('input[type="email"]');
    const passwordInput = await page.$('input[type="password"]');
    const loginButton = await page.$('button[type="submit"]');
    
    if (emailInput && passwordInput && loginButton) {
      console.log('‚úÖ Formul√°rio de login encontrado');
    } else {
      console.log('‚ùå Formul√°rio de login n√£o encontrado');
    }
    
    console.log('\nüéØ Teste conclu√≠do. Verifique os logs acima para identificar problemas.');
    
  } catch (error) {
    console.error('‚ùå Erro durante o teste:', error.message);
  } finally {
    await browser.close();
  }
}

// Verificar se o Puppeteer est√° dispon√≠vel
try {
  testAuthFlow();
} catch (error) {
  console.log('‚ö†Ô∏è  Puppeteer n√£o est√° dispon√≠vel. Execute: npm install puppeteer');
  console.log('   Ou teste manualmente navegando para http://localhost:5173');
}